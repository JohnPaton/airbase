name: CI/CD
on:
  push:
  schedule:
    - cron:  '0 12 1 * *'  # On the first day of the month
  pull_request:

env:
  UV_FROZEN: "true"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12', '3.13']
        prerelease: [false]
        include:
          - python: '3.14'
            prerelease: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        name: Setup project
        with:
          python-version: ${{ matrix.python }}
          allow-python-prereleases: ${{ matrix.prerelease }}
      - name: Run unit tests
        continue-on-error: ${{ matrix.prerelease }}
        env:
          COVERAGE_FILE: coverage/.coverage.py${{ matrix.python }}
        run: uv run pytest -lk "not integration" --cov --no-cov-on-fail
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python }}
          path: coverage
          include-hidden-files: true

  integration-test:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-project
        name: Setup project
      - name: Run integration tests
        env:
          COVERAGE_FILE: coverage/.coverage.integration
        run: uv run pytest -lvk "integration" --cov --no-cov-on-fail
      - uses: actions/download-artifact@v4
        name: Get coverage files
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true
      - name: Combined coverage report
        run: |
          uv run coverage combine coverage/
          uv run coverage report

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

  build-and-deploy:
    needs: [unit-test, lint, integration-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - uses: ./.github/actions/setup-project
        name: Setup project
      - run: git diff --exit-code
        name: Assert workdir is clean
      - run: |
          uv build
      - uses: pypa/gh-action-pypi-publish@release/v1
        if: |
          github.repository == 'JohnPaton/airbase' &&
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
