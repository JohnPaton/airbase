[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "airbase"
version = "0.0.0"
description = "An easy downloader for the AirBase air quality data."
authors = ["John Paton"]
readme = "README.md"
repository = "https://github.com/johnpaton/airbase"
documentation = "https://airbase.readthedocs.io"
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Typing :: Typed",
]
exclude = ["docs", "tests", "data", "scripts", ".git*", ".*.yaml"]

[tool.poetry.scripts]
#airbase = "airbase.cli:main"

[tool.poetry.dependencies]
python = ">=3.7,<4"
aiohttp = ""
aiofiles = ""
tqdm = ""
importlib-metadata = { version = "", python = "<3.8" }
typing-extensions = { version = "", python = "<3.8" }
# docs
sphinx = { version = ">=4.2.0", optional = true }
sphinx-rtd-theme = { version = "", optional = true }
# test
pytest = { version = ">=6.0", optional = true }
aioresponses = { version = "", optional = true }
pytest-cov = { version = "", optional = true }

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "importlib-metadata"]
test = ["pytest", "aioresponses", "pytest-cov"]
format = ["black", "isort"]
lint = ["mypy", "types-aiofiles"]

[tool.poetry.dev-dependencies]
pytest-sugar = "^0.9.5"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--showlocals"
testpaths = ["tests"]

[tool.coverage.run]
source = ["airbase"]

[tool.coverage.report]
skip_covered = true
skip_empty = true
show_missing = true

[tool.black]
line-length = 80
target-version = ["py37"]

[tool.isort]
line_length = 80
py_version = "37"
profile = "black"
src_paths = ["airbase", "tests"]
extend_skip = ["scripts"]

[tool.mypy]
warn_unused_configs = true
warn_unused_ignores = false
warn_no_return = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
pretty = true
sqlite_cache = true
exclude = "docs|scripts"

[[tool.mypy.overrides]]
module = ["tqdm"]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, lint, docs, integration
skip_missing_interpreters = True
isolated_build = True

[testenv]
commands_pre =
    python --version
commands =
    pytest -ra -q {posargs:--cov -k "not integration"}
extras = 
    test

[testenv:integration]
commands_pre =
    python --version
commands =
    pytest -ra -q {posargs:--cov -k integration}
extras = 
    test

[testenv:lint]
skipsdist=True
commands =
    pre-commit run --all-files --show-diff-on-failure
deps =
    pre-commit

[testenv:docs]
skipsdist=True
commands =
    sphinx-build {posargs:-M html} docs/source docs/build
extras = 
    docs
"""
